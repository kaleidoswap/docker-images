name: Build and Push Docker Images

on:
  push:
    branches: [ "main" ]
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ "main" ]

env:
  DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  BITCOIND_IMAGE_NAME: ${{ secrets.DOCKERHUB_USERNAME }}/mutinynet-bitcoind
  ELECTRS_IMAGE_NAME: ${{ secrets.DOCKERHUB_USERNAME }}/mutinynet-electrs
  BITCOIN_VERSION: "c23afab47fbe"
  TRIPLET: "x86_64-linux-gnu"
  GIT_REF: "v0.10.0"

jobs:
  build-and-push:
    runs-on: self-hosted
    labels: [ "kaleidoswap", "Linux", "X64" ]

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Add swap space
      - name: Add swap space
        run: |
          sudo swapoff -a
          sudo fallocate -l 8G /swapfile
          sudo chmod 600 /swapfile
          sudo mkswap /swapfile
          sudo swapon /swapfile
          sudo swapon --show

      # Free up disk space
      - name: Free Disk Space (Ubuntu)
        run: |
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /usr/local/lib/android
          sudo rm -rf /opt/ghc
          sudo rm -rf /usr/local/share/boost
          sudo rm -rf "$AGENT_TOOLSDIRECTORY"

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract metadata for bitcoind
        id: meta-bitcoind
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.BITCOIND_IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Extract metadata for electrs
        id: meta-electrs
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.ELECTRS_IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver-opts: |
            image=moby/buildkit:master
            network=host

      # Build bitcoind first as it's smaller
      - name: Build and push bitcoind image
        uses: docker/build-push-action@v5
        with:
          context: ./bitcoind
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta-bitcoind.outputs.tags }}
          labels: ${{ steps.meta-bitcoind.outputs.labels }}
          build-args: |
            BITCOIN_VERSION=${{ env.BITCOIN_VERSION }}
            TRIPLET=${{ env.TRIPLET }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # Build electrs with optimizations
      - name: Build and push electrs image
        uses: docker/build-push-action@v5
        with:
          context: ./electrs
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta-electrs.outputs.tags }}
          labels: ${{ steps.meta-electrs.outputs.labels }}
          build-args: |
            GIT_REF=${{ env.GIT_REF }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-contexts: |
            app=.
          outputs: type=registry,compression=gzip,compression-level=9
